{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/Leagues/Leagues.component.html","webpack:///./app/Leagues/Leagues.component.ts","webpack:///./app/Matches/MatchList.component.css","webpack:///./app/Matches/MatchList.component.html","webpack:///./app/Matches/MatchList.component.ts","webpack:///./app/Matches/Matches.component.html","webpack:///./app/Matches/Matches.component.ts","webpack:///./app/Matches/cart.component.css","webpack:///./app/Matches/cart.component.html","webpack:///./app/Matches/cart.component.ts","webpack:///./app/Shared/dataService.ts","webpack:///./app/Shared/leagueService.ts","webpack:///./app/Shared/order.ts","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div>\\r\\n    <h4>{{title}}</h4>\\r\\n    <!--<table>\\r\\n        <tr>\\r\\n            <th>Name</th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let l of leagues\\\">\\r\\n            <td>{l.name}</td>\\r\\n        </tr>\\r\\n\\r\\n    </table>-->\\r\\n\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"list-group\\\">\\r\\n            <!--<a class=\\\"list-group-item list-group-item-action\\\">Leagues</a>-->\\r\\n            <div *ngFor=\\\"let l of leagues\\\">\\r\\n                <!--@*////<a class=\\\"list-group-item list-group-item-action\\\">@m.Name</a>////-->\\r\\n                <div class=\\\"list-group-item list-group-item-action\\\">\\r\\n                    <a href=\\\"#/Matches/{{l.id}}\\\">{{l.name}}</a>\\r\\n                    <!--@Html.ActionLink(m.Name, \\\"Matches\\\", new { sid = m.Id })-->\\r\\n                </div>\\r\\n                <!--}-->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--<div *ngFor=\\\"let l of leagues\\\">\\r\\n        <ul>\\r\\n            <li>{l.name}</li>\\r\\n        </ul>\\r\\n\\r\\n    </div>-->\\r\\n</div>\\r\\n\"","ï»¿import { Component, OnInit } from '@angular/core';\nimport { LeagueService } from '../Shared/leagueService';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\n\n@Component({\n    selector: 'Bettor-App',\n    templateUrl: 'Leagues.component.html',\n})\nexport class Leagues implements OnInit{\n    title = 'Leagues';\n\n    constructor(private data: LeagueService, private route: ActivatedRoute) { }\n\n    public leagues = [];\n\n    ngOnInit(): void {\r\n        //const id = this.route.snapshot.paramMap.get('id');\r\n        this.data.loadLeagues(/*id*/)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.leagues = this.data.leagues;\r\n                }\r\n            });\n    }\n}\n","module.exports = \".table {\\r\\n    width: 100%;\\r\\n    min-width:100%;\\r\\n    \\r\\n}\\r\\n\\r\\n.btn {\\r\\n    background-color: transparent;\\r\\n    border: 0;\\r\\n    color: cornflowerblue;\\r\\n}\"","module.exports = \"<!--<div class=\\\"row\\\">\\r\\n    {id}-->\\r\\n    <!--<ul>\\r\\n        <li *ngFor=\\\"let m of matches\\\"></li>\\r\\n    </ul>-->\\r\\n<!--</div>-->\\r\\n\\r\\n<div >\\r\\n\\r\\n    <p>To add a bet to the Bet-Slip, click on the odds that you would like to add. \\r\\n    To increment your bet. Click on the preffered odd again.</p>\\r\\n\\r\\n    <table class=\\\"table table-bordered table-striped table-sm\\\">\\r\\n        <thead class=\\\"thead-dark\\\">\\r\\n            <tr class=\\\"text-center\\\">\\r\\n                <th>Match No.</th>\\r\\n                <th>Teams</th>\\r\\n                <th>Winner 1</th>\\r\\n                <th>Draw</th>\\r\\n                <th>Winner 2</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let m of matches\\\">\\r\\n            <tr class=\\\"text-center\\\">\\r\\n                <td>{{m.matchNoOfTheDay}}</td>\\r\\n                <td>{{m.team1Name}} v {{m.team2Name}}</td>\\r\\n                <td><button id=\\\"betButton1\\\" class=\\\"btn\\\" (click)=\\\"addBet(m, 1)\\\">{{m.team1Wins}}</button></td>\\r\\n                <td><button id=\\\"betButton3\\\" class=\\\"btn\\\" (click)=\\\"addBet(m, 3)\\\">{{m.draw}}</button></td>\\r\\n                <td><button id=\\\"betButton2\\\" class=\\\"btn\\\" (click)=\\\"addBet(m, 2)\\\">{{m.team2Wins}}</button></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","ï»¿import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../Shared/dataService';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppComponent } from 'ClientApp/app/app.component';\r\nimport { Match } from '../shared/match' \r\n\r\n    \r\n@Component({\r\n  selector: 'Match-List',\r\n  templateUrl: 'MatchList.component.html',\r\n  styleUrls: ['MatchList.component.css']\r\n})\r\nexport class MatchList implements OnInit {\r\n\r\n    constructor(private data: DataService, private route: ActivatedRoute) {\r\n        this.id = route.snapshot.params['id']\r\n    }\r\n    \r\n    id: string;\r\n    public matches = [];\r\n    \r\n    ngOnInit(): void {\r\n        this.data.loadMatches(this.id)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.matches = this.data.matches;\r\n                }\r\n            });\r\n    }\r\n\r\n    addBet(match: Match, chanceType: number) {\r\n        this.data.AddToOrder(match, chanceType);\r\n    }\r\n}","module.exports = \"<div class=\\\"card bg-light p-2\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-8\\\">\\r\\n            <h3 class=\\\"text-center\\\">{{title}}</h3>\\r\\n            <br />\\r\\n            <Match-List></Match-List>\\r\\n        </div>\\r\\n        <div class=\\\"offset-1 col-3\\\">\\r\\n            <div class=\\\"card bg-light p-2\\\">\\r\\n                <the-cart></the-cart>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","ï»¿import { Component } from '@angular/core';\n\n@Component({\n    selector: 'Bettor-App',\n    templateUrl: 'Matches.component.html',\n})\nexport class Matches {\n    title = 'Shop';\n}\n","module.exports = \".matchTeams {\\r\\n    font-size: 13px;\\r\\n}\"","module.exports = \"<h3>Bet Slip</h3>\\r\\n<!--<div>#/Items: { data.order.items.length }}</div>-->\\r\\n<div class=\\\"container\\\">Subtotal: {{ data.order.subtotal | currency:\\\"USD\\\":true  }}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n    \\r\\n    <tbody *ngFor=\\\"let o of data.order.items\\\">\\r\\n        <tr>\\r\\n            <td><strong>{{ o.teamName }}</strong></td>\\r\\n            <td><strong>{{ o.chance | currency:\\\"USD\\\":true}}</strong></td>\\r\\n        </tr>\\r\\n        <tr class=\\\"matchTeams\\\"><td >{{ o.matchTeams }}</td><td>{{ o.stake }}</td></tr>\\r\\n        <tr><td>{{ (o.chance * o.stake) | currency:\\\"USD\\\":true }}</td></tr>\\r\\n    </tbody>\\r\\n</table>\"","ï»¿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../Shared/dataService\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: [\"cart.component.css\"]\r\n})\r\n\r\nexport class Cart {\r\n    constructor(private data: DataService) { }\r\n\r\n\r\n}","ï»¿import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Match } from \"./match\";\r\nimport { Order, OrderItem } from \"./order\";\r\nimport { Matches } from '../Matches/Matches.component';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    public order: Order = new Order\r\n    public matches: Matches[] = [];\r\n\r\n    loadMatches(id: string) {\r\n        return this.http.get('/api/Match/1'/*+id*/)\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.matches = data;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http.post(\"/api/orders\", this.order)\r\n            .pipe(\r\n                map(response => {\r\n                    this.order = new Order();\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n\r\n    public AddToOrder(newMatch: Match, chancType: number) {\r\n\r\n        let item: OrderItem = this.order.items.find(i => newMatch.matchNoOfTheDay == i.matchId && i.chanceType == chancType);\r\n\r\n        if (item)\r\n        {\r\n            item.stake++;\r\n        }\r\n        else {\r\n\r\n            item = new OrderItem();\r\n            if (chancType == 1) {\r\n                item.chance = newMatch.team1Wins;\r\n                item.chanceType = 1;\r\n                item.teamName = newMatch.team1Name;\r\n            }\r\n            else if (chancType == 2) {\r\n                item.chance = newMatch.team2Wins;\r\n                item.chanceType = 2;\r\n                item.teamName = newMatch.team2Name;\r\n            }\r\n            else if (chancType == 3) {\r\n                item.chance = newMatch.draw;\r\n                item.chanceType = 3;\r\n                item.teamName = \"Draw\";\r\n            }\r\n\r\n            item.matchTeams = newMatch.team1Name +\" v \"+ newMatch.team2Name;\r\n            item.stake = 1.00;\r\n            item.matchId = newMatch.matchNoOfTheDay;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","ï»¿import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LeagueService {\r\n    constructor(private http: HttpClient) { }\r\n    public leagues = [];\r\n    loadLeagues(/*id: string*/) {\r\n        return this.http.get('/api/League'/*+ id*/)\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.leagues = data;\r\n                return true;\r\n            }));\r\n    }\r\n}\r\n\r\n","ï»¿import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    stake: number;\r\n    chance: number;\r\n    chanceType: number;\r\n    matchId: number;\r\n    teamName: string;\r\n    matchTeams: string;\r\n}\r\n\r\n\r\n\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n<!--<div class=\\\"row\\\">\\r\\n    <div>\\r\\n        <h3>{ title }</h3>\\r\\n        <Match-List></Match-List>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"card bg-light p-2\\\">\\r\\n            <h3>Cart</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>-->\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'Bettor-App',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n    //title = 'Matches';\n   \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { DataService } from './Shared/dataService';\r\nimport { LeagueService } from './Shared/leagueService';\r\nimport { Matches } from './Matches/Matches.component';\r\nimport { MatchList } from './Matches/MatchList.component';\r\nimport { Leagues } from './Leagues/Leagues.component';\r\nimport { Cart } from \"./Matches/cart.component\";\n\nlet routes = [\n    { path: '', component: Leagues },\n    { path: 'Matches/:id', component: Matches }\n];\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      MatchList,\n      Matches,\n      Leagues,\n      Cart\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      RouterModule\r\n          .forRoot(routes,\r\n          {\r\n          useHash: true,\r\n          enableTracing: false // for Debugging of the Routes\r\n          }\n      )\n  ],\n    providers: [\n        DataService,\n        LeagueService\n    ],\n    bootstrap: [AppComponent],\n\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}